import React, { useEffect, useState } from 'react';
import useTodoStore from '../store/useTodoStore';
import { shallow } from 'zustand/shallow';
import { useNavigate } from 'react-router-dom';

const TodoList = () => {
    const [todos, setTodos] = useTodoStore(
        (state) => [state.todos, state.setTodos],
        shallow
    );
    const navigate = useNavigate();
    const [selectAllChecked, setSelectAllChecked] = useState(false);

    useEffect(() => {}, []);

    console.log({ todos });

    const handleEditTodo = (id) => {
        console.log('Edit Todo');
        navigate(`/edit-todo/${id}`);
    };

    const handleDeleteTodo = (id) => {
        // Implement your delete logic here
    };

    const handleToggleSelectAll = () => {
        setSelectAllChecked(!selectAllChecked);
        setTodos((prevTodos) =>
            prevTodos.map((todo) => ({
                ...todo,
                selected: !selectAllChecked,
            }))
        );
    };

    const handleToggleTodo = (id) => {
        setTodos((prevTodos) =>
            prevTodos.map((todo) =>
                todo._id === id ? { ...todo, selected: !todo.selected } : todo
            )
        );
    };

    return (
        <div>
            <h1>Todo List</h1>
            {/* Select All checkbox */}
            <input
                type='checkbox'
                checked={selectAllChecked}
                onChange={handleToggleSelectAll}
            />
            <span>Select All</span>

            {/* Looping all todos with checkbox along with delete and edit button */}
            {todos.map((todo) => (
                <div key={todo._id}>
                    <input
                        type='checkbox'
                        value={todo._id}
                        checked={todo.selected}
                        onChange={() => handleToggleTodo(todo._id)}
                    />
                    <span>{todo.name}</span>
                    <button onClick={() => handleEditTodo(todo?._id)}>
                        Edit
                    </button>
                    <button onClick={() => handleDeleteTodo(todo?._id)}>
                        Delete
                    </button>
                </div>
            ))}
        </div>
    );
};

export default TodoList;

// set((state) => ({
//     todos: state.todos.map((t) => {
//         if (t._id === id) {
//             return t;
//         }
//         return t;
//     }),
// }));

import React, { useState, useEffect } from 'react';

// Custom hook to fetch data from an API
function useFetch(url) {
    const [data, setData] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchData = async () => {
            try {
                const response = await fetch(url);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json();
                setData(data);
                setLoading(false);
            } catch (error) {
                setError(error);
                setLoading(false);
            }
        };

        fetchData();
    }, [url]);

    return { data, loading, error };
}

// Example usage of the custom hook
function DataFetchingComponent() {
    const apiUrl = 'https://api.example.com/data';
    const { data, loading, error } = useFetch(apiUrl);

    if (loading) {
        return <div>Loading...</div>;
    }

    if (error) {
        return <div>Error: {error.message}</div>;
    }

    if (!data) {
        return <div>No data available.</div>;
    }

    // Render the fetched data
    return (
        <div>
            <h1>Data Fetched from API:</h1>
            <ul>
                {data.map((item) => (
                    <li key={item.id}>{item.name}</li>
                ))}
            </ul>
        </div>
    );
}

export default DataFetchingComponent;

import React, { useState } from 'react';

// Custom hook to manage a counter state
function useCounter(initialValue = 0) {
    const [count, setCount] = useState(initialValue);

    const increment = () => {
        setCount((prevCount) => prevCount + 1);
    };

    const decrement = () => {
        setCount((prevCount) => prevCount - 1);
    };

    return { count, increment, decrement };
}

// Example usage of the custom hook
function CounterComponent() {
    const { count, increment, decrement } = useCounter(0);

    return (
        <div>
            <h1>Counter: {count}</h1>
            <button onClick={increment}>Increment</button>
            <button onClick={decrement}>Decrement</button>
        </div>
    );
}

export default CounterComponent;

import React, { useState } from 'react';
import './App.css';

function App() {
    const [userinfo, setUserInfo] = useState({
        languages: [],
        response: [],
    });

    const handleChange = (e) => {
        // Destructuring
        const { value, checked } = e.target;
        const { languages } = userinfo;

        console.log(`${value} is ${checked}`);

        // Case 1 : The user checks the box
        if (checked) {
            setUserInfo({
                languages: [...languages, value],
                response: [...languages, value],
            });
        }

        // Case 2 : The user unchecks the box
        else {
            setUserInfo({
                languages: languages.filter((e) => e !== value),
                response: languages.filter((e) => e !== value),
            });
        }
    };

    return (
        <>
            <div className='container-fluid top '>
                <div className='container mt-5 pb-5 pt-5'>
                    <h3 className='form-head-contact-h3 '>
                        Your programming expertise lies in what languages?{' '}
                    </h3>

                    <form>
                        <div className='row'>
                            <div className='col-md-6'>
                                <div className='form-check m-3'>
                                    <input
                                        className='form-check-input'
                                        type='checkbox'
                                        name='languages'
                                        value='Javascript'
                                        id='flexCheckDefault'
                                        onChange={handleChange}
                                    />
                                    <label
                                        className='form-check-label'
                                        htmlFor='flexCheckDefault'
                                    >
                                        Javascript
                                    </label>
                                </div>
                                <div className='form-check m-3'>
                                    <input
                                        className='form-check-input'
                                        type='checkbox'
                                        name='languages'
                                        value='Python'
                                        id='flexCheckDefault'
                                        onChange={handleChange}
                                    />
                                    <label
                                        className='form-check-label'
                                        htmlFor='flexCheckDefault'
                                    >
                                        Python
                                    </label>
                                </div>
                                <div className='form-check m-3'>
                                    <input
                                        className='form-check-input'
                                        type='checkbox'
                                        name='languages'
                                        value='Java'
                                        id='flexCheckDefault'
                                        onChange={handleChange}
                                    />
                                    <label
                                        className='form-check-label'
                                        htmlFor='flexCheckDefault'
                                    >
                                        Java
                                    </label>
                                </div>
                                <div className='form-check m-3'>
                                    <input
                                        className='form-check-input'
                                        type='checkbox'
                                        name='languages'
                                        value='PHP'
                                        id='flexCheckDefault'
                                        onChange={handleChange}
                                    />
                                    <label
                                        className='form-check-label'
                                        htmlFor='flexCheckDefault'
                                    >
                                        PHP
                                    </label>
                                </div>
                            </div>
                            <div className='col-md-6'>
                                <div className='form-check m-3'>
                                    <input
                                        className='form-check-input'
                                        type='checkbox'
                                        name='languages'
                                        value='C#'
                                        id='flexCheckDefault'
                                        onChange={handleChange}
                                    />
                                    <label
                                        className='form-check-label'
                                        htmlFor='flexCheckDefault'
                                    >
                                        C#
                                    </label>
                                </div>
                                <div className='form-check m-3'>
                                    <input
                                        className='form-check-input'
                                        type='checkbox'
                                        name='languages'
                                        value='C++'
                                        id='flexCheckDefault'
                                        onChange={handleChange}
                                    />
                                    <label
                                        className='form-check-label'
                                        htmlFor='flexCheckDefault'
                                    >
                                        C++
                                    </label>
                                </div>
                                <div className='form-check m-3'>
                                    <input
                                        className='form-check-input'
                                        type='checkbox'
                                        name='languages'
                                        value='C'
                                        id='flexCheckDefault'
                                        onChange={handleChange}
                                    />
                                    <label
                                        className='form-check-label'
                                        htmlFor='flexCheckDefault'
                                    >
                                        C
                                    </label>
                                </div>
                                <div className='form-check m-3'>
                                    <input
                                        className='form-check-input'
                                        type='checkbox'
                                        name='languages'
                                        value='Typescript'
                                        id='flexCheckDefault'
                                        onChange={handleChange}
                                    />
                                    <label
                                        className='form-check-label'
                                        htmlFor='flexCheckDefault'
                                    >
                                        Typescript
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div className='form-floating mt-3 mb-3 text-center'>
                            <label htmlFor='exampleFormControlTextarea1'>
                                You're proficient in the following languages :{' '}
                            </label>
                            <textarea
                                className='form-control text'
                                name='response'
                                value={userinfo.response}
                                placeholder='The checkbox values will be displayed here '
                                id='floatingTextarea2'
                                style={{ height: '150px' }}
                                onChange={handleChange}
                            ></textarea>
                        </div>
                    </form>
                </div>
            </div>
        </>
    );
}

export default App;
